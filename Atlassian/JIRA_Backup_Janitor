#!/usr/bin/env bash

################################################################################
#
# Created On:       29 July 2013
# Last Modified:    31 July 2013
#
# Author(s):        Scott Natelli
#
# Deletes the XML backup files autmatically generated by JIRA.
#
# I stumbled upon these backup files while digging around in the Atlassian
# directories. From what I can tell, the service cannot be turned off, and it
# does not delete any of the backups it makes.
#
################################################################################

########## GLOBAL VARIABLES ####################################################

# @var withSuccess        Status code indictaing success during execution.
# @var withSeriousIssues  Status code indictaing serious trouble during execution.
declare -i withSuccess=0
declare -i withSeriousIssues=2

# @var numberOfExports   The number of export files to keep.
declare numberOfExports=14

# @var exportDir  Path for the JIRA export directory.
declare exportDir="/path/to/atlassian/application-data/jira/export"

# @var exportRegex   Regular expression for the Atlassian archive file.
declare exportRegex="[0-9]{4}-[a-zA-Z]{3}-[0-9]{2}--[0-9]{4}.zip"

# @var atlassianBackups   Array to hold the list of backup files.
declare -a atlassianBackups

########## FUNCTIONS ###########################################################

# Iterates through the exports, removing every file that is older than 14 days.
function cullBackups() {

    local numberOfExportFiles=${#atlassianBackups[@]}
    local index=0

    while [[ $numberOfExportFiles -gt $numberOfExports ]]; do
        rm ${atlassianBackups[$index]}
        ((numberOfExportFiles--))
        ((index++))
    done
}

# Populates the $atlassianBackups array with the files in the specific directory.
# @param $1 The backup directory to cull.
# @param $2 A regular expression used to filter out non-standard backup files.
function getListOfFiles() {

    local regex=$1
    local completeFileList=$(ls -1tr $2)
    local listSize=${#completeFileList[@]}

    for ((index=0; index < listSize; index++)); do
        atlassianBackups=(${atlassianBackups[@]} $(echo "${completeFileList[$index]}" | egrep $regex))
    done
}

########## MAIN ################################################################

# Check for the Atlassian software data directory.
if [[ ! -d $exportDir ]]; then
    exit $withSeriousIssues
fi

# Setting the working directory.
cd $exportDir

# Cull the export files.
getListOfFiles $exportRegex $exportDir

if [[ ${#atlassianBackups[@]} -gt $numberOfExports ]]; then
    cullBackups
fi

exit $withSuccess

########## LA FINE #############################################################

